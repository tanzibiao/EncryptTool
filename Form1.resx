<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tipEncrypt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAACHAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAG8lJ
        REFUeNrt3X2QHdWZ3/Hvc/q+zIxmpJmrESOwXgEJMDYGGwN+AVblYvGuX9be2tiVctbJbjZlkLCTSiqb
        ircqu9lUJalypVLLLiNIXGYrtrdi75ZdCcaLcbDMm1neLCPhktHozUgCC2nuzEjzeu/t8+SPc0cSGIFe
        pqfvvef5VF1mAKn79Lndvz59+vRpwbSNoa+8gKvXSLt78KWyqCiEfyIqzqlcnAqrgNUCqzx+lSCrgUGg
        F+gGekB7wu/SFZass8AMyDQwHX5nEjim6EGHO6RwCDiYKIe86Ksq6gVARUUFV5vTZGYaXyxx5N++J++q
        MmdJ8i6AObOB+/aGb0iBhkdQfLHIwIFfJZOXrFilTteo6KUKG1C5DOgjHOTzn57mpwwUgORNPgDpm3wa
        wBwhEOZDYf5zAtG9AiOisk+8vNz7ytFDY+tWpq5eRxEouJNlH/vCZXlXpTkDC4AW0vdXuwBQlJIrggh4
        jy8XSzLXuESE1aCrUFYhshp4B7AKWAsMLXJxjwC/JLQMDqN6EOEQyCFVDmq58Iqbq9dwDlSp+TrS3N1O
        3HVV3lVtmiwAWsDA8D7CV5HiUEZnDkmle3WPCEsVrYBcqqrXCFwHvAt0PUgp73K/ntZA9gMvKmwXkR2g
        +wSpqnK8OnNwenn3KvUIoeGhjG2+NO9CR88CICeVe0ZO/q6SACJCmii+5L32J869C7gR4f0o1wP9hGa8
        a35a7btTwDc/DWAc4TmUZ4GnU+9fdE7GBVdTkhRURdOTf7m6ZUPe5Y9SIe8CGAjHTKFH4UqBDyfibgU2
        AstRlhA68FrtgH+j+VN7AhSBLpTfAN4PfDYRtxv0UYUnQH4B6VTeBTatv1N1nMF79wKgXtGCQp01KlwF
        3CThYFnX/CzJu6wLbAo4ABxQeBb4B1F2UeRlaQjiwq547A7rMFxMFgCLYNnwL1EKOGoIDcrFUqHeqF+k
        qlcCtwDXA+8FLs67rIvkVeCnwHPAYyLyi2Kh+NpcvdZQCnhKCA0mNq/Nu5wdzwIgY8vv2YPiKDHJtCxz
        CbVeJ3I5cKuqfhz4AOGWXYxmgKdE5HvAo151T0ppskcnfI1eBM/olsvzLmNHsz6ARVD2M8wmSwuOdDnw
        24p+FriBcOCX8y5fjrqADyp6HXA78C1H+v05WTralU41ai7mqlkc1gLIwLLhHSgewVGgG7wMItysor9F
        OPAvp/Ou8S/UFLAHeEZU/h7lcZweazBzsi4nNl+Tdxk7jgXAAqvcswfwCCUmGo/LsuKNV4HcrvAJ4D1A
        Je8ytrgq8ILAA6A/mKg/vWtZ4WZVaoCjapcEC8oCYAFV7nkJEMSXnXe1Cs5vFHWfBn4HsBvd52YE+D8q
        /rt4t9v5UlXdnAeluuWKvMvWMSwAFkBleHf4RRVIEyi+A5FNKvo5Ud6HnfXPV1WF50Xlm6hug/phSFLB
        ATBqg4cumHUCLrjkGtDfB35XlBXE28O/EAZE+RDoRtD3QPJ1kO15F6qTWAvgAi0fDkN6BcHjbwU+B/Lb
        hAd1zMI5jPKwwN94x/8TDf+xutlaARfCAuACDAyPzI9/LXn4kMIfEm5nrci7bB1qDHgE+BrII+BrANXN
        G/MuV9uyADgPA8OnPcgDZQfvF/iywocJz+Sb7MwCPwP9U9AnwiQmYTe21sC5c3kXoN0J3KrwnxRuxg7+
        xVAmPBb9P0E+GR6kMufLWgDn6PSzP/Bp4AsSDv6evMsWoReBvwLum/8P1go4NxYA5+C0g98BHycc/Jto
        v57+GmEcfq3576XmNrTYJCNn5SfAV4AHCFOZWQicAwuAs1TZugdVRaFLwgM8Xxb4IK135p8DRgkdZlOE
        g7wB1MNPnVaYApmSEAIodIMuEVgC0kO4PVxs/iwRhi0PAMtpvWcXZoCngP8APCfKHNgYgbNlAfA2BraG
        QT6Cw7kkSdPGh4H/2Hx2P++DXwkHd+20z4jCM4JuF2W/IGPqkslGkky6tD4p6lWbWyTh76OEXwVQceKT
        Ym8hTXvFp72KDqiwXpHrJDzHsIEQCvOfAvnvR8eBbcB/LTR4Ji3gtVmi6p0WBG/FBgKdA+/T20TkS6he
        T/4HPyAnQPeiul1Efobqz1Q5jJNJYBalJpAizs8srfi+0VdV3+ZQdd4zNVAZWzo+OiGaOoUEYSfwMF57
        RXgHIteq6rWIXAdyGejSnCuiD9gkSi1NGEb5ce6R1Casmt7CwL17CefHIvi5jYLchfKH5PskX13g54o8
        AzyPshf8UXHuaHGudnSmt6fhanUERXw4z2uSUC8WTy7g+B+tftMFL/3qwZO/F+t1JE1RFHWhfeBLRbon
        pwv1cmmFer8C3AqEy4D3CXqDwtWES4e8jAPfQvgfKfx0/hbXmLUCzsgC4AwG7xvBIzQoukQbK0X9v0D5
        HPk91DNOmIZ7h8CjKu6nDS3uKrnpWZ86xDkkTSkfq9JY0rPgL+cY+soLFKammRusoEmCeo9LPDXf01WQ
        +lWi/r0KtwLXEKYp78+png4ifFvhHu/k5STVVLwyepcNFnozdglwBiKwYukcR8cZVOVjKP+YxT/4U+AE
        UBV4WpFtKvJ4d33qF9PFJThS+gZfYf+Lm8Kf/rPs8vx1gfJnoRdh/bu2Mfba+lmF7d2Nme3TxSVPiurN
        gm5SuJHwEFQfp15AshhWo3wK4XCS+v/dd6z+q8lKURdx/W3FAuAMvIfRidJSUf0Ayr8CFnO2yvkptg8K
        PK4iP1B4QlRfVSSdLrbeXCLNMo0Iuk9FHgY+LKq3NwdIrWZxpzJfK6r/HOXlyUrxEULrybwJuwR4g/mH
        ezR83gf8e4GPsrjX/XPAQ6B/K8jTXtxo6pKJQtrwKqe+srE7W2MG3YGte0/+Lqo0koJLfLrMqV+u6I0g
        /4hQh4t5C3FK4SHgvwg8P19rozZG4HUsAE6zfOtLzd8EUVnj4feBf0m4/70Yw6YVeA14COFvEf+EeDfh
        5dSqW+WgP5PTw8CpR51fhroPo8yHwEUszn7nCeMh/sLB11X05eZdT0bvtAlF5tklwOsohKO/SzX5TeBT
        LN6TfQ1gLyIPhINfd6Iyo6IIKdU726MTaz6gKlt3E245ygSOH6FyFOUoqp8gXE5lve85wnf3KYUjiP8m
        yizzKWAAawGcVBkeQcJD5gXQa1WTLwOfXqT9pQbsBr4N/De8TlNoPuF2R3s3WSv3NodPNxSc9AD/BvgM
        4c1HizD0WAC+K5L+Z5CfAQ2vMGaPEAPWAni9cMoqh6fM9NpFWmsKPAHcDzyA99MkHfiQZiKQ+mmcuxvY
        D/wB4bZhxncIFOBa1H0S2EUYDp13bbQMawE0VULnXx/hmf4/JXQAZh2Q0whfAx5AeY4wIy7QeQ+0VF7/
        FGUF4XrgE82BVVmPqmwAP1X0zxV9zCEnema7OfSvV1/wgtudtQCAga17mhN60k/oqNpA9nVTBR5A5H5K
        yQ7mGg208w78kxvb3K7K8AgIVcqFH1FLj6HaR5gyPcuJUwvARkF+x6nsqhUaJ259cRXfzLtSWkAHtjXP
        T71YdMB6wn3r3oxXdwJ4WEXv9pru1LlGA5GOPfhPV928AUTQuUbDa7pTRe8GHm7WSZZ6Ce9hfGf3bKnr
        oev20nv3CL13j1zoctta1AEwMLybgeaU3oVGYz3wEeAKsu2cShEeFCdbgR0N36iDUr0jnhdehG1Vwraz
        Q5xsRXiQ5vP8GSkAaxX9WKOQXiWJzSQEkQfAPFFFVC8nnP2zPPgbwPdF+bo497SijZJrxzk4FkbJlVC0
        Ic49LcrXge836yizVSLyEUWuG52Sgur8lV+8LAAAj15EGLt+Hdn1Ss8CT4vy13j/pKbpXCIJIsJYm9zj
        X0hjd25EREgkQdN0Du+fFOWvgaebdZUFAdaJ8KH+Xq4plZBSvPkLRBwAlbtHEAXXX8cp7wauJ3QCZnFn
        JAVGBLkfcT/CuQm8MnrH5YxG1PR/o5Pb7xWcm0DcjwS5n/BasCwuB4TwuPL7BG5ws+HGb2VrvP0A0QYA
        CvVXCuixUrk5u8+VGa7tKPBjRb+l+HEQRrfEd9Y/k1AXguLHFf0W8GNCnWVlHcq7tIsluLhvhccbAALF
        obSAsEbFfYhsH/XdhfAQQi3u3e1tCDTr6CHCoJ2sLAPeDVyLb8uJUBdMlAGw7v79SFGgIF0kciPo2gxX
        9zLoNuBJwsScjG6Ot9l/JqfVSR14sllnL2e4yotFeb8oXaLhkjBGUQbAZRd3MdfwOEePorcAQ9mtTZ8F
        fQx0AhuDejY01JU+FuouM4MKN6nSS0Loh4hQlAGwY/80S4vFgnrWEDr/lmewGk94tPdRj+5UVVS9zVL7
        Fqp3bkDVo6p4dCfwKKEOs7hp30+4DFijc1KiEOWhEGcApF6ZTdMVCh8QWEU2t/6mVHlQVR4XLVQvfHFx
        ES1UVeVxVR4kvN9gwVcBrAC5noTlsfbNRBkA4hRx2i+i7ySbWWo8cATlAZ+yT2MfbXIeVBWfsg/lAeAI
        2bQCyuL0neK0X1yc31F0AdC/dRdhBJj0q8rVZDPyb0LD0307Bldz3KcwtvkKxjbbTDRvZ76efAqDqzkO
        7GjW5UQGqyupytVhXwj7RmyiCwAVpavRD+gQp95ys9Cqgj4joqPVw2GGYXNuRCDUnY4K+gynPSq9gErA
        BtChrkY/KvG1AqILAOcdM4Wj/aDrCEOAs6iDY6K6XVTnHJ6JL1nH37ma+NIGHB5RnRPV7cCxDFbjwj6g
        62YKR/udj+5wiDAA1OG0sDq80ioTqSoHFHl2ptg9k/f2truZYveMIs+qcoDMnhaUy5wWVjuN7nCILwA8
        gkdWoqwhm3H/hwXdrSKzXY2snmmJR1djFhWZFXQ3cDiDVQjKGo+s9BHeCoguACQMNx1EMhv8sx/YKfNT
        UN9lHX/na77umnW5k1C3C08YQhiMsa8mninBvv3z8PMYSHjXfVbTfY8gsp1sblvFJxyVHthOeErw1gzW
        sqK5T5zaTz5zdd5bvijiCYDmljrv8E6bAfB2L8s+R6oe2APssa7/BaWohnoFj8hCtlwFZAUw4LzEdEQA
        MV0CNMLnlh8OAjoA2rfAa/CIvITIITv4MyBCs25fYsFbV9oHOnDLDwdP7iexiCbv+o86AHnktkOVhFJ/
        BquYf63Xcejc2X0X2+tmEw51+xrhpSILrf+R2w4t7z/qqoCO573hiySaAGje4nHgBslm1l8FxkGzGLdu
        QkfgFMg42TxV2ZtQGEQZJ9vJSVtKNAHAqcvGpWQz/l9RHQOdzHtTO1J4nmISGJt/h9sCKyNuad6budji
        CQDXfPEnlFEpZrMSGQOxFkAmHISnAscyWkERp2Uie1tWNAEgp7qNulXIIgAUYQxh0qb9yEAYvzGJMkY2
        lwBF8XTnvZmLLZoAaPbMhxYAmQbAVFznkEUSruBCC0CzCQBErAXQsU7dmutCNZsAUKrWAsiIMt8CqJJR
        CwCRrrw3c7HFMw6gOQkAqmWyC74JupkNU3+aBVUHupklm3kBAAqolpv7SN5bu2iiaQGEQXpASPokg5ae
        ArNMYVN/ZkGZnxhslkxqWBPNpmXY0uJpASyOkDJRXUUuklN1as9YLCALgAxUbQKQBWd1mg0LAGMiZgFg
        TMQsAIyJmAWAMRGzADAmYhYAxkTMAsCYiFkAGBMxCwBjImYBYEzELACMiZgFgDERswAwJmIWAMZEzALA
        mIhFMyMQ7rSssxl7zK8RcPHN5BJPAJyc502xho95U+qJbTqnCAMAkDDFrDGnaLNlGFfz0E6FxkTMAsCY
        iFkAGBMxCwBjIhZPJ6Cc3ulnHYDmjSTK3SLOAIiro9ecLYkvAeIJAH/aC2UkvGvamFMUfHxnBusDMCZi
        FgDGROy8LgEq97x06l/aqTk9faxOdyUlu16ABkBleCTvLe1kjYyWq0DKTLVOz2CbfIf6uhGu1S1XnPMS
        LrQPoBvoA3po/a41pWewjPohoCuD5QuwClgJlPPe2A41R6jjLM44XcAQPYOXN9fT6mc1AaaBE8DM+S7k
        QgPgJuDzwKa8a+MshAcAxC0hhNZCKwP/nfBltPrO066UcNLJIGDlCkT+HXAX8/tK69sG/K/mz/NyoQGw
        BLgEWJt3TbQAAYbyLoQ5b+XmZzDvgpyDSwjH4Hm70E5AT3bXZMaYt9YgHIPnze4CGBMxCwBjImYBYEzE
        LACMiZgFgDERswAwJmIWAMZEzALAmIhZABgTMQsAYyJmAWBMxCwAjImYBYAxEbMAMCZiFgDGRMwCwJiI
        WQAYEzELAGMiZgFgTMQsAIyJmAWAMRGzADAmYhYAxkTMAsCYiFkAGBMxCwBjImYBYEzELACMiZgFgDER
        swAwJmIWAMZEzALAmIhZABgTMQsAYyJmAWBMxCwAjImYBYAxEbMAMCZihbwLYBaVnvbhtJ9y2k857d9N
        h7MAiIdX2CNwBDgKvAaMNf/fAHARsEJhSOByrHUYBQuAznYA+CVwsPlzHzCmIuPAuPP+BIB3rg/oF9V+
        QhhcCqwFVjd/rst7Q0w2LAA6zzThDH9IlB+rsN072Tmz7KJ9S6qvNhCHcKrtP+/kNYB6pioXF7onXrvU
        eX23KNep8BvAKmAF0JP3BpqFYwHQGRRIgTngOdDvOdw2hJc8OgNoefq4b5TDsXv8j1a/6UKWfvUgAOXp
        4w1gj8JeJ/IDge96/CaQjwPXA2UgwfoK2p4FQGeog4wIfAP0hxqa/pMn5qbmlpR7fu1sf5a8ACfmpib7
        ykteBA4IbAO5TeGfgG4ASnlvuLkwFgDtbw54BvhL4Kkuiq/MUvMAfeUlAFTvuPysFvTGlsHg8J75ZcwJ
        zHVRHJulcQTYC3wRuIHQGjBtygKgvR0BfgL8HaTfgSSt0UBwHNt8dgf9Wzl9GYPDe6jR8MChsC5XBI4B
        HwSG8q4Ic34sANqTAhOofh/0a4g8AYKiHN28IZMVzodBZXgEkBT0b1B9GWQckU8Dy7A+gbZjAdCeJlH9
        O9Cvgj6b33GnPwHqKCkinwX68q4Yc25ssEf7OS7KY8D9qn47iEcVVKlmdPY/XXXzBubXB+JDGbi/Wabj
        eVeOOTfWAmg/vwL9jsBOJKmBUt1yxaIWYH59lXteQiSpCewE/Q7IBmBp3hVkzp61ANrLJLDdi9+WSmNG
        xS/6wX+66pYrUPGk0pjx4rcB25tlNG3CAqC97BDV7zl1hxItNPIuzLxECw2n7pCofg/YkXd5zNmzAGgb
        WgN9DtFtCA3kPIf3ZEGUZpm2gT4XymragQVAe1CQEeCFZesPHMZ5xSljm6/Mu1yhDE7BeV22/sBh4IVm
        WVsoocyZWAC0BwW2I7Jr/MB6UAmfVtEsz/iB9SCyi9AXYAHQBuwuQHuYRXgOp3tQGL0jv46/NzN6Z/Ou
        wL27QXQPXp5D+V3sycGWZy2A1tcADqPsoCFH8y7M25dWjqLsAA43y25amAVA66srHFQ43kqt/jNRAYXj
        GiYhqeddHvPWLABaXypQRamjUL1jY97lOaPqHRvnZxysC1QJcxSYFmZ9AK0vBY6LtMfZVEIrpU4YFmwB
        0OIsAFqfisg0bXI9LSEBGsC0qtqdgBZnAdD6xKt2Eabgank+HPMJ0CX2eHDLswBofQURXQl05V2QsyFh
        hGIXsBIV279anHUCtr4iKquAHlSo3D2Sd3nOqHL3yPwApZ5mmYt5l8m8NQuA1lcALkalj4TWHl+nhMa/
        Sh9wMdbCbHkWAK3PAQMoK5mWckt/Yw6YljLKSsILRlq5tAb7gtqFQ+QSLbtBTVr3K9PEoWU3iMgl2L7V
        FqyJ1h4E9BohXa9wuH9r6AcYvzP7KcDOxnx5UI/AeuAa7A5AW7CUbg8OuBH0vQ1HidY8uCSUTd8bymr7
        VjuwL6k9CLAe5IZEuQwNA+6W37c/73Kx/L79IY0USZTLQG4IZW3JkDJvYAHQXjY45SaHJNJCg+xEFYck
        TrkJaI3rEnNWLADaywaEWyRJhlypO5kfeJ8rEVypO5EkGUK4BQuAtmIB0F4GgJvUp7/na7UlmtapbN2d
        W2EqW3ejaR1fqy1Rn/4ecFOzjKZN2F2AdqNcCvp5xO9FdBvqJitb9wBQvfPC3wd4NubXF6Yq9L2gt6Ly
        eeDSvKvHnBtrAbSfEvBO4E9Q2YT0n7wOOHVgZud165B+QWUT8CfNMtnrwtuMBUB7KqNyLcjn0YmP5FYK
        nfhIKINci70mvC3ZJUD7KqNsCs1w6aK05EGdm9K+4cM4GkxsXrugK1s2/Es8BVRnkPISoTb1MVT/KbAJ
        O/jblgVAe1sO/Caq3cyd6ILk8ROVS44sO7qP/r9sjhb84oV1ys8vR9MGJ1asYaC6b4i5EzeD/DPgZuxd
        gG3NAqD9LQVuA9aC3tc/uv/v0fQgIgv6dh7RtNQ/un81or8FfAHYiF3ztz0LgM5QArlC0D8X0vUeuRfY
        w8I9PCwgax3pHcAfgPRiz/p3BAuAzlEk3IOvkM33Wmgu2+7zdxC7C9CZshgn3Dpjj82CsQAwJmIWAMZE
        zALAmIhZABgTMQsAYyJmAWBMxCwAjImYBYAxEbMAMCZiFgDGRMwCwJiIWQAYEzELAGMiZgFgTMQsAIyJ
        mAWAMRGzADAmYhYAxkTMAsCYiFkAGBMxCwBjImYBYEzELACMiZgFgDERswAwJmIWAJ0nyzf42NuBOoy9
        G7DTCF041yOosAAHrIgAiIr0IL4r780zC8sCoPMMONGhhVpYOP5B0CHsxaAdxy4BOs9FoGtABZRlw7vP
        e0Hh7yrNZa0JyzadxFoAneciFdYATiC94KUJaDhRrBELgI5jLYDOc5HABo8ur+HdhXQCKFDDO48uF9iA
        BUDHsQDoPCXgygS5vYTrSRAGzuMyYGB4NwlCcxm3A1c2l206iF0CdKb1wGeA52vUfl6mqMvvCSEwumXj
        W/7F+T+nwBw1KVNa11zW+rw3yiw8awF0pl7gJuD2EsU1dSfgHKVSwpbnx1l3//5f+wvr7t/PlufHKZUS
        cI66E0oU1wC3N5fVm/dGmYVnAdC5+oE/FuSj5YZfivck7u2/7sQ58J5ywy8V5KPAHzeXZTqQXQJ0Lkfo
        tPuid+5SEfm/vd2Ff/jGU0fTxEHlnpdAmoGgnuMzDb7x1FEurnQlM7X0Jq/6SeBjWMdfR7MA6HxXA4Oo
        XnJsfPayxMmrqv6EwAnCB6BPVfsS5/qOjc9eDNzW/CzYgCLTmiwA4jCk8FnCtfxBETmC8ivgSPjfMiQi
        K5t/brXCWqCYd6FN9iwA4lFQWA+6FvCIeMADIOIAB+qag36sbygSFgDxECBpfowBLOmNiZoFgDERswAw
        JmIWAMZEzALAmIhZABgTMQsAYyJmAWBMxCwAjImYBYAxEbMAMCZiFgDGRMwCwJiIWQAYEzELAGMiZgFg
        TMQsAIyJmAWAMRGzADAmYhYAxkTMAsCYiFkAGBMxCwBjImYBYEzELACMiZgFgDERswAwJmIWAMZEzALA
        mIhZABgTMQsAYyJmAWBMxCwAjImYBYAxEbMAMCZi/x+uugL9GJsiKwAAAABJRU5ErkJggg==
</value>
  </data>
</root>